{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\nconst btn = document.querySelector('button[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst timer = document.querySelector('.timer');\nbtn.addEventListener('click', onStartBtnClick);\nlet userSelectedDate = null;\nbtn.disabled = true;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      return alert('Please choose a date in the future');\n    }\n    btn.disabled = false;\n    userSelectedDate = selectedDates[0];\n  },\n};\nflatpickr(input, options);\nfunction onStartBtnClick() {\n  btn.disabled = true;\n  input.disabled = true;\n  const intervalId = setInterval(() => {\n    const currentDate = Date.now();\n    const diff = userSelectedDate - currentDate;\n    if (diff <= 1000) {\n      clearInterval(intervalId);\n    }\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    timer.querySelector('[data-days]').textContent = addZero(days);\n    timer.querySelector('[data-hours]').textContent = addZero(hours);\n    timer.querySelector('[data-minutes]').textContent = addZero(minutes);\n    timer.querySelector('[data-seconds]').textContent = addZero(seconds);\n  }, 1000);\n}\nfunction addZero(value) {\n  return String(value).padStart(2, '0');\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["btn","input","timer","onStartBtnClick","userSelectedDate","options","selectedDates","flatpickr","intervalId","currentDate","diff","days","hours","minutes","seconds","convertMs","addZero","value","ms"],"mappings":"oGAIA,MAAMA,EAAM,SAAS,cAAc,oBAAoB,EACjDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAQ,SAAS,cAAc,QAAQ,EAC7CF,EAAI,iBAAiB,QAASG,CAAe,EAC7C,IAAIC,EAAmB,KACvBJ,EAAI,SAAW,GACf,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,GADA,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAI,IAAI,KACzB,OAAO,MAAM,oCAAoC,EAEnDN,EAAI,SAAW,GACfI,EAAmBE,EAAc,CAAC,CACnC,CACH,EACAC,EAAUN,EAAOI,CAAO,EACxB,SAASF,GAAkB,CACzBH,EAAI,SAAW,GACfC,EAAM,SAAW,GACjB,MAAMO,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAc,KAAK,MACnBC,EAAON,EAAmBK,EAC5BC,GAAQ,KACV,cAAcF,CAAU,EAE1B,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDR,EAAM,cAAc,aAAa,EAAE,YAAcc,EAAQL,CAAI,EAC7DT,EAAM,cAAc,cAAc,EAAE,YAAcc,EAAQJ,CAAK,EAC/DV,EAAM,cAAc,gBAAgB,EAAE,YAAcc,EAAQH,CAAO,EACnEX,EAAM,cAAc,gBAAgB,EAAE,YAAcc,EAAQF,CAAO,CACpE,EAAE,GAAI,CACT,CACA,SAASE,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}